// @generated by protobuf-ts 2.9.1
// @generated from protobuf file "service.proto" (package "service", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Service } from "./service";
import type { LibraryTrimReply } from "./service";
import type { LibraryTrimRequest } from "./service";
import type { LibraryExportReply } from "./service";
import type { LibraryExportRequest } from "./service";
import type { DeviceListReply } from "./service";
import type { DeviceListRequest } from "./service";
import type { SourceListReply } from "./service";
import type { SourceListRequest } from "./service";
import type { JobGetLogReply } from "./service";
import type { JobGetLogRequest } from "./service";
import type { JobDisplayReply } from "./service";
import type { JobDisplayRequest } from "./service";
import type { JobDispatchReply } from "./service";
import type { JobDispatchRequest } from "./service";
import type { JobDeleteReply } from "./service";
import type { JobDeleteRequest } from "./service";
import type { JobEditStateReply } from "./service";
import type { JobEditStateRequest } from "./service";
import type { JobCreateReply } from "./service";
import type { JobCreateRequest } from "./service";
import type { JobListReply } from "./service";
import type { JobListRequest } from "./service";
import type { TapeGetPositionsReply } from "./service";
import type { TapeGetPositionsRequest } from "./service";
import type { TapeDeleteReply } from "./service";
import type { TapeDeleteRequest } from "./service";
import type { TapeListReply } from "./service";
import type { TapeListRequest } from "./service";
import type { FileListParentsReply } from "./service";
import type { FileListParentsRequest } from "./service";
import type { FileDeleteReply } from "./service";
import type { FileDeleteRequest } from "./service";
import type { FileMkdirReply } from "./service";
import type { FileMkdirRequest } from "./service";
import type { FileEditReply } from "./service";
import type { FileEditRequest } from "./service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { FileGetReply } from "./service";
import type { FileGetRequest } from "./service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service service.Service
 */
export interface IServiceClient {
    /**
     * @generated from protobuf rpc: FileGet(service.FileGetRequest) returns (service.FileGetReply);
     */
    fileGet(input: FileGetRequest, options?: RpcOptions): UnaryCall<FileGetRequest, FileGetReply>;
    /**
     * @generated from protobuf rpc: FileEdit(service.FileEditRequest) returns (service.FileEditReply);
     */
    fileEdit(input: FileEditRequest, options?: RpcOptions): UnaryCall<FileEditRequest, FileEditReply>;
    /**
     * @generated from protobuf rpc: FileMkdir(service.FileMkdirRequest) returns (service.FileMkdirReply);
     */
    fileMkdir(input: FileMkdirRequest, options?: RpcOptions): UnaryCall<FileMkdirRequest, FileMkdirReply>;
    /**
     * @generated from protobuf rpc: FileDelete(service.FileDeleteRequest) returns (service.FileDeleteReply);
     */
    fileDelete(input: FileDeleteRequest, options?: RpcOptions): UnaryCall<FileDeleteRequest, FileDeleteReply>;
    /**
     * @generated from protobuf rpc: FileListParents(service.FileListParentsRequest) returns (service.FileListParentsReply);
     */
    fileListParents(input: FileListParentsRequest, options?: RpcOptions): UnaryCall<FileListParentsRequest, FileListParentsReply>;
    /**
     * @generated from protobuf rpc: TapeList(service.TapeListRequest) returns (service.TapeListReply);
     */
    tapeList(input: TapeListRequest, options?: RpcOptions): UnaryCall<TapeListRequest, TapeListReply>;
    /**
     * @generated from protobuf rpc: TapeDelete(service.TapeDeleteRequest) returns (service.TapeDeleteReply);
     */
    tapeDelete(input: TapeDeleteRequest, options?: RpcOptions): UnaryCall<TapeDeleteRequest, TapeDeleteReply>;
    /**
     * @generated from protobuf rpc: TapeGetPositions(service.TapeGetPositionsRequest) returns (service.TapeGetPositionsReply);
     */
    tapeGetPositions(input: TapeGetPositionsRequest, options?: RpcOptions): UnaryCall<TapeGetPositionsRequest, TapeGetPositionsReply>;
    /**
     * @generated from protobuf rpc: JobList(service.JobListRequest) returns (service.JobListReply);
     */
    jobList(input: JobListRequest, options?: RpcOptions): UnaryCall<JobListRequest, JobListReply>;
    /**
     * @generated from protobuf rpc: JobCreate(service.JobCreateRequest) returns (service.JobCreateReply);
     */
    jobCreate(input: JobCreateRequest, options?: RpcOptions): UnaryCall<JobCreateRequest, JobCreateReply>;
    /**
     * @generated from protobuf rpc: JobEditState(service.JobEditStateRequest) returns (service.JobEditStateReply);
     */
    jobEditState(input: JobEditStateRequest, options?: RpcOptions): UnaryCall<JobEditStateRequest, JobEditStateReply>;
    /**
     * @generated from protobuf rpc: JobDelete(service.JobDeleteRequest) returns (service.JobDeleteReply);
     */
    jobDelete(input: JobDeleteRequest, options?: RpcOptions): UnaryCall<JobDeleteRequest, JobDeleteReply>;
    /**
     * @generated from protobuf rpc: JobDispatch(service.JobDispatchRequest) returns (service.JobDispatchReply);
     */
    jobDispatch(input: JobDispatchRequest, options?: RpcOptions): UnaryCall<JobDispatchRequest, JobDispatchReply>;
    /**
     * @generated from protobuf rpc: JobDisplay(service.JobDisplayRequest) returns (service.JobDisplayReply);
     */
    jobDisplay(input: JobDisplayRequest, options?: RpcOptions): UnaryCall<JobDisplayRequest, JobDisplayReply>;
    /**
     * @generated from protobuf rpc: JobGetLog(service.JobGetLogRequest) returns (service.JobGetLogReply);
     */
    jobGetLog(input: JobGetLogRequest, options?: RpcOptions): UnaryCall<JobGetLogRequest, JobGetLogReply>;
    /**
     * @generated from protobuf rpc: SourceList(service.SourceListRequest) returns (service.SourceListReply);
     */
    sourceList(input: SourceListRequest, options?: RpcOptions): UnaryCall<SourceListRequest, SourceListReply>;
    /**
     * @generated from protobuf rpc: DeviceList(service.DeviceListRequest) returns (service.DeviceListReply);
     */
    deviceList(input: DeviceListRequest, options?: RpcOptions): UnaryCall<DeviceListRequest, DeviceListReply>;
    /**
     * @generated from protobuf rpc: LibraryExport(service.LibraryExportRequest) returns (service.LibraryExportReply);
     */
    libraryExport(input: LibraryExportRequest, options?: RpcOptions): UnaryCall<LibraryExportRequest, LibraryExportReply>;
    /**
     * @generated from protobuf rpc: LibraryTrim(service.LibraryTrimRequest) returns (service.LibraryTrimReply);
     */
    libraryTrim(input: LibraryTrimRequest, options?: RpcOptions): UnaryCall<LibraryTrimRequest, LibraryTrimReply>;
}
/**
 * @generated from protobuf service service.Service
 */
export class ServiceClient implements IServiceClient, ServiceInfo {
    typeName = Service.typeName;
    methods = Service.methods;
    options = Service.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: FileGet(service.FileGetRequest) returns (service.FileGetReply);
     */
    fileGet(input: FileGetRequest, options?: RpcOptions): UnaryCall<FileGetRequest, FileGetReply> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<FileGetRequest, FileGetReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FileEdit(service.FileEditRequest) returns (service.FileEditReply);
     */
    fileEdit(input: FileEditRequest, options?: RpcOptions): UnaryCall<FileEditRequest, FileEditReply> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<FileEditRequest, FileEditReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FileMkdir(service.FileMkdirRequest) returns (service.FileMkdirReply);
     */
    fileMkdir(input: FileMkdirRequest, options?: RpcOptions): UnaryCall<FileMkdirRequest, FileMkdirReply> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<FileMkdirRequest, FileMkdirReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FileDelete(service.FileDeleteRequest) returns (service.FileDeleteReply);
     */
    fileDelete(input: FileDeleteRequest, options?: RpcOptions): UnaryCall<FileDeleteRequest, FileDeleteReply> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<FileDeleteRequest, FileDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FileListParents(service.FileListParentsRequest) returns (service.FileListParentsReply);
     */
    fileListParents(input: FileListParentsRequest, options?: RpcOptions): UnaryCall<FileListParentsRequest, FileListParentsReply> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<FileListParentsRequest, FileListParentsReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TapeList(service.TapeListRequest) returns (service.TapeListReply);
     */
    tapeList(input: TapeListRequest, options?: RpcOptions): UnaryCall<TapeListRequest, TapeListReply> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<TapeListRequest, TapeListReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TapeDelete(service.TapeDeleteRequest) returns (service.TapeDeleteReply);
     */
    tapeDelete(input: TapeDeleteRequest, options?: RpcOptions): UnaryCall<TapeDeleteRequest, TapeDeleteReply> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<TapeDeleteRequest, TapeDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: TapeGetPositions(service.TapeGetPositionsRequest) returns (service.TapeGetPositionsReply);
     */
    tapeGetPositions(input: TapeGetPositionsRequest, options?: RpcOptions): UnaryCall<TapeGetPositionsRequest, TapeGetPositionsReply> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<TapeGetPositionsRequest, TapeGetPositionsReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: JobList(service.JobListRequest) returns (service.JobListReply);
     */
    jobList(input: JobListRequest, options?: RpcOptions): UnaryCall<JobListRequest, JobListReply> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<JobListRequest, JobListReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: JobCreate(service.JobCreateRequest) returns (service.JobCreateReply);
     */
    jobCreate(input: JobCreateRequest, options?: RpcOptions): UnaryCall<JobCreateRequest, JobCreateReply> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<JobCreateRequest, JobCreateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: JobEditState(service.JobEditStateRequest) returns (service.JobEditStateReply);
     */
    jobEditState(input: JobEditStateRequest, options?: RpcOptions): UnaryCall<JobEditStateRequest, JobEditStateReply> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<JobEditStateRequest, JobEditStateReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: JobDelete(service.JobDeleteRequest) returns (service.JobDeleteReply);
     */
    jobDelete(input: JobDeleteRequest, options?: RpcOptions): UnaryCall<JobDeleteRequest, JobDeleteReply> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<JobDeleteRequest, JobDeleteReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: JobDispatch(service.JobDispatchRequest) returns (service.JobDispatchReply);
     */
    jobDispatch(input: JobDispatchRequest, options?: RpcOptions): UnaryCall<JobDispatchRequest, JobDispatchReply> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<JobDispatchRequest, JobDispatchReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: JobDisplay(service.JobDisplayRequest) returns (service.JobDisplayReply);
     */
    jobDisplay(input: JobDisplayRequest, options?: RpcOptions): UnaryCall<JobDisplayRequest, JobDisplayReply> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<JobDisplayRequest, JobDisplayReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: JobGetLog(service.JobGetLogRequest) returns (service.JobGetLogReply);
     */
    jobGetLog(input: JobGetLogRequest, options?: RpcOptions): UnaryCall<JobGetLogRequest, JobGetLogReply> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<JobGetLogRequest, JobGetLogReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SourceList(service.SourceListRequest) returns (service.SourceListReply);
     */
    sourceList(input: SourceListRequest, options?: RpcOptions): UnaryCall<SourceListRequest, SourceListReply> {
        const method = this.methods[15], opt = this._transport.mergeOptions(options);
        return stackIntercept<SourceListRequest, SourceListReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeviceList(service.DeviceListRequest) returns (service.DeviceListReply);
     */
    deviceList(input: DeviceListRequest, options?: RpcOptions): UnaryCall<DeviceListRequest, DeviceListReply> {
        const method = this.methods[16], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeviceListRequest, DeviceListReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LibraryExport(service.LibraryExportRequest) returns (service.LibraryExportReply);
     */
    libraryExport(input: LibraryExportRequest, options?: RpcOptions): UnaryCall<LibraryExportRequest, LibraryExportReply> {
        const method = this.methods[17], opt = this._transport.mergeOptions(options);
        return stackIntercept<LibraryExportRequest, LibraryExportReply>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: LibraryTrim(service.LibraryTrimRequest) returns (service.LibraryTrimReply);
     */
    libraryTrim(input: LibraryTrimRequest, options?: RpcOptions): UnaryCall<LibraryTrimRequest, LibraryTrimReply> {
        const method = this.methods[18], opt = this._transport.mergeOptions(options);
        return stackIntercept<LibraryTrimRequest, LibraryTrimReply>("unary", this._transport, method, opt, input);
    }
}
